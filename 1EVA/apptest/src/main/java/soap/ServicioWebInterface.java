
package soap;

import java.util.List;
import jakarta.jws.WebMethod;
import jakarta.jws.WebParam;
import jakarta.jws.WebResult;
import jakarta.jws.WebService;
import jakarta.xml.bind.annotation.XmlSeeAlso;
import jakarta.xml.ws.Action;
import jakarta.xml.ws.RequestWrapper;
import jakarta.xml.ws.ResponseWrapper;


/**
 * This class was generated by the XML-WS Tools.
 * XML-WS Tools 4.0.0
 * Generated source version: 3.0
 * 
 */
@WebService(name = "ServicioWebInterface", targetNamespace = "http://server.soap/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface ServicioWebInterface {


    /**
     * 
     * @param arg0
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getGreating", targetNamespace = "http://server.soap/", className = "soap.server.GetGreating")
    @ResponseWrapper(localName = "getGreatingResponse", targetNamespace = "http://server.soap/", className = "soap.server.GetGreatingResponse")
    @Action(input = "http://server.soap/ServicioWebInterface/getGreatingRequest", output = "http://server.soap/ServicioWebInterface/getGreatingResponse")
    public String getGreating(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

    /**
     * 
     * @param arg0
     * @param arg1
     * @return
     *     returns java.util.List<java.lang.Integer>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getFibonacci", targetNamespace = "http://server.soap/", className = "soap.server.GetFibonacci")
    @ResponseWrapper(localName = "getFibonacciResponse", targetNamespace = "http://server.soap/", className = "soap.server.GetFibonacciResponse")
    @Action(input = "http://server.soap/ServicioWebInterface/getFibonacciRequest", output = "http://server.soap/ServicioWebInterface/getFibonacciResponse")
    public List<Integer> getFibonacci(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        int arg1);

    /**
     * 
     * @param arg0
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getSumaFibonacci", targetNamespace = "http://server.soap/", className = "soap.server.GetSumaFibonacci")
    @ResponseWrapper(localName = "getSumaFibonacciResponse", targetNamespace = "http://server.soap/", className = "soap.server.GetSumaFibonacciResponse")
    @Action(input = "http://server.soap/ServicioWebInterface/getSumaFibonacciRequest", output = "http://server.soap/ServicioWebInterface/getSumaFibonacciResponse")
    public int getSumaFibonacci(
        @WebParam(name = "arg0", targetNamespace = "")
        List<Integer> arg0);

    /**
     * 
     * @param arg0
     * @param arg1
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getSuma", targetNamespace = "http://server.soap/", className = "soap.server.GetSuma")
    @ResponseWrapper(localName = "getSumaResponse", targetNamespace = "http://server.soap/", className = "soap.server.GetSumaResponse")
    @Action(input = "http://server.soap/ServicioWebInterface/getSumaRequest", output = "http://server.soap/ServicioWebInterface/getSumaResponse")
    public int getSuma(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        int arg1);

    /**
     * 
     * @param arg0
     * @param arg1
     * @param arg2
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "call", targetNamespace = "http://server.soap/", className = "soap.server.Call")
    @ResponseWrapper(localName = "callResponse", targetNamespace = "http://server.soap/", className = "soap.server.CallResponse")
    @Action(input = "http://server.soap/ServicioWebInterface/callRequest", output = "http://server.soap/ServicioWebInterface/callResponse")
    public String call(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        int arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        int arg2);

}
